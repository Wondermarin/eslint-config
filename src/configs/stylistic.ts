import { interopDefault } from "../utils/interop-default";
import { EGlob } from "../constants/glob";

import type { IConfig } from "../types/config";

export async function stylisticConfig(): Promise<IConfig[]> {
  const [prettierConfig, prettierPlugin, stylisticPlugin, perfectionistPlugin] = await Promise.all([
    interopDefault(import("eslint-config-prettier")),
    interopDefault(import("eslint-plugin-prettier")),
    interopDefault(import("@stylistic/eslint-plugin")),
    interopDefault(import("eslint-plugin-perfectionist")),
  ]);

  return [
    {
      name: "wondermarin/eslint-config/prettier",
      files: [EGlob.JS, EGlob.JSX, EGlob.TS, EGlob.TSX, EGlob.VUE],
      plugins: {
        prettier: prettierPlugin,
      },
      rules: {
        "prettier/prettier": "error",
        ...prettierConfig.rules,
      },
    },
    {
      name: "wondermarin/eslint-config/stylistic",
      files: [EGlob.JS, EGlob.JSX, EGlob.TS, EGlob.TSX, EGlob.VUE],
      plugins: {
        "@stylistic": stylisticPlugin,
      },
      rules: {
        "@stylistic/array-bracket-newline": "off",
        "@stylistic/array-bracket-spacing": "off",
        "@stylistic/array-element-newline": "off",
        "@stylistic/arrow-parens": "off",
        "@stylistic/arrow-spacing": "off",
        "@stylistic/block-spacing": "off",
        "@stylistic/brace-style": "off",
        "@stylistic/comma-dangle": "off",
        "@stylistic/comma-spacing": "off",
        "@stylistic/comma-style": "off",
        "@stylistic/computed-property-spacing": "off",
        "@stylistic/dot-location": "off",
        "@stylistic/eol-last": "off",
        "@stylistic/function-call-argument-newline": "off",
        "@stylistic/function-call-spacing": "off",
        "@stylistic/function-paren-newline": "off",
        "@stylistic/generator-star-spacing": "off",
        "@stylistic/implicit-arrow-linebreak": "off",
        "@stylistic/indent": "off",
        "@stylistic/indent-binary-ops": "off",
        "@stylistic/jsx-child-element-spacing": "off",
        "@stylistic/jsx-closing-bracket-location": "off",
        "@stylistic/jsx-closing-tag-location": "off",
        "@stylistic/jsx-curly-brace-presence": "off",
        "@stylistic/jsx-curly-newline": "off",
        "@stylistic/jsx-curly-spacing": "off",
        "@stylistic/jsx-equals-spacing": "off",
        "@stylistic/jsx-first-prop-new-line": "off",
        "@stylistic/jsx-function-call-newline": "off",
        "@stylistic/jsx-indent-props": "off",
        "@stylistic/jsx-max-props-per-line": "off",
        "@stylistic/jsx-newline": "off",
        "@stylistic/jsx-one-expression-per-line": "off",
        "@stylistic/jsx-pascal-case": "off",
        "@stylistic/jsx-props-no-multi-spaces": "off",
        "@stylistic/jsx-quotes": "off",
        "@stylistic/jsx-self-closing-comp": "off",
        "@stylistic/jsx-sort-props": "off",
        "@stylistic/jsx-tag-spacing": "off",
        "@stylistic/jsx-wrap-multilines": "off",
        "@stylistic/key-spacing": "off",
        "@stylistic/keyword-spacing": "off",
        "@stylistic/line-comment-position": "off",
        "@stylistic/linebreak-style": "off",
        "@stylistic/lines-around-comment": "off",
        "@stylistic/lines-between-class-members": "off",
        "@stylistic/max-len": "off",
        "@stylistic/max-statements-per-line": "off",
        "@stylistic/member-delimiter-style": "off",
        "@stylistic/multiline-comment-style": "off",
        "@stylistic/multiline-ternary": "off",
        "@stylistic/new-parens": "off",
        "@stylistic/newline-per-chained-call": "off",
        "@stylistic/no-confusing-arrow": "off",
        "@stylistic/no-extra-parens": "off",
        "@stylistic/no-extra-semi": "off",
        "@stylistic/no-floating-decimal": "off",
        "@stylistic/no-mixed-operators": "off",
        "@stylistic/no-mixed-spaces-and-tabs": "off",
        "@stylistic/no-multi-spaces": "off",
        "@stylistic/no-multiple-empty-lines": "off",
        "@stylistic/no-tabs": "off",
        "@stylistic/no-trailing-spaces": "off",
        "@stylistic/no-whitespace-before-property": "off",
        "@stylistic/nonblock-statement-body-position": "off",
        "@stylistic/object-curly-newline": "off",
        "@stylistic/object-curly-spacing": "off",
        "@stylistic/object-property-newline": "off",
        "@stylistic/one-var-declaration-per-line": "off",
        "@stylistic/operator-linebreak": "off",
        "@stylistic/padded-blocks": "off",
        "@stylistic/padding-line-between-statements": [
          "error",
          {
            blankLine: "always",
            next: "*",
            prev: [
              "block-like",
              "case",
              "class",
              "debugger",
              "default",
              "directive",
              "do",
              "expression",
              "for",
              "function",
              "if",
              "iife",
              "multiline-expression",
              "multiline-const",
              "multiline-let",
              "switch",
              "throw",
              "try",
              "while",
              "with",
            ],
          },
          {
            blankLine: "always",
            next: [
              "block-like",
              "break",
              "case",
              "class",
              "continue",
              "debugger",
              "default",
              "do",
              "expression",
              "for",
              "function",
              "if",
              "iife",
              "multiline-expression",
              "multiline-const",
              "multiline-let",
              "return",
              "singleline-const",
              "singleline-let",
              "switch",
              "throw",
              "try",
              "while",
              "with",
            ],
            prev: "*",
          },
          {
            blankLine: "any",
            next: "expression",
            prev: "expression",
          },
          {
            blankLine: "any",
            next: ["singleline-const", "singleline-let"],
            prev: ["singleline-const", "singleline-let"],
          },
        ],
        "@stylistic/quote-props": "off",
        "@stylistic/quotes": "off",
        "@stylistic/rest-spread-spacing": "off",
        "@stylistic/semi": "off",
        "@stylistic/semi-spacing": "off",
        "@stylistic/semi-style": "off",
        "@stylistic/space-before-blocks": "off",
        "@stylistic/space-before-function-paren": "off",
        "@stylistic/space-in-parens": "off",
        "@stylistic/space-infix-ops": "off",
        "@stylistic/space-unary-ops": "off",
        "@stylistic/spaced-comment": "off",
        "@stylistic/switch-colon-spacing": "off",
        "@stylistic/template-curly-spacing": "off",
        "@stylistic/template-tag-spacing": "off",
        "@stylistic/type-annotation-spacing": "off",
        "@stylistic/type-generic-spacing": "off",
        "@stylistic/type-named-tuple-spacing": "off",
        "@stylistic/wrap-iife": "off",
        "@stylistic/wrap-regex": "off",
        "@stylistic/yield-star-spacing": "off",
      },
    },
    {
      name: "wondermarin/eslint-config/perfectionist",
      files: [EGlob.JS, EGlob.JSX, EGlob.TS, EGlob.TSX, EGlob.VUE],
      plugins: {
        perfectionist: perfectionistPlugin,
      },
      rules: {
        "perfectionist/sort-array-includes": "off",
        "perfectionist/sort-astro-attributes": "off",
        "perfectionist/sort-classes": "off",
        "perfectionist/sort-enums": "off",
        "perfectionist/sort-exports": [
          "error",
          {
            type: "line-length",
            order: "desc",
            ignoreCase: true,
            partitionByComment: false,
            partitionByNewLine: true,
            groupKind: "values-first",
            matcher: "minimatch",
          },
        ],
        "perfectionist/sort-imports": [
          "error",
          {
            type: "line-length",
            order: "desc",
            ignoreCase: true,
            internalPattern: ["@/**"],
            sortSideEffects: false,
            newlinesBetween: "always",
            maxLineLength: 120,
            groups: [
              "builtin",
              "builtin-type",
              "external",
              "external-type",
              "internal",
              "internal-type",
              "parent",
              "parent-type",
              "sibling",
              "sibling-type",
              "index",
              "index-type",
              "side-effect",
              "side-effect-style",
            ],
            customGroups: {},
            matcher: "minimatch",
            environment: "node",
          },
        ],
        "perfectionist/sort-interfaces": "off",
        "perfectionist/sort-intersection-types": "off",
        "perfectionist/sort-jsx-props": "off",
        "perfectionist/sort-maps": "off",
        "perfectionist/sort-named-exports": [
          "error",
          {
            type: "line-length",
            order: "desc",
            ignoreCase: true,
            groupKind: "values-first",
            partitionByComment: false,
            partitionByNewLine: true,
            matcher: "minimatch",
          },
        ],
        "perfectionist/sort-named-imports": [
          "error",
          {
            type: "line-length",
            order: "desc",
            ignoreCase: true,
            ignoreAlias: false,
            groupKind: "values-first",
            partitionByComment: false,
            partitionByNewLine: true,
            matcher: "minimatch",
          },
        ],
        "perfectionist/sort-object-types": "off",
        "perfectionist/sort-objects": "off",
        "perfectionist/sort-svelte-attributes": "off",
        "perfectionist/sort-switch-case": "off",
        "perfectionist/sort-union-types": "off",
        "perfectionist/sort-variable-declarations": "off",
        "perfectionist/sort-vue-attributes": "off",
      },
    },
  ];
}
